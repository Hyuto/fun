{"version":3,"sources":["utils/tools.ts","components/Bar/Bar.tsx","components/List/List.tsx","components/Spinner/Spinner.tsx","views/Main/main.tsx","views/AddUpdate/AddUpdate.tsx","components/SpinningLogo/logo.svg","components/SpinningLogo/SpinningLogo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Instance","axios","create","baseURL","Bar","data","callback","useState","Object","assign","data_","setData","open","setOpen","Handler","a","complete","put","id","then","response","setStatus","getStatus","className","color","onClick","e","stopPropagation","status","toggle","title","delete","console","log","description","deadline","List","barCalback","useCallback","action","new_data","filter","Error","map","React","memo","Spinner","Main","todos","setTodos","loading","setLoading","useEffect","AddUpdate","useForm","register","handleSubmit","onSubmit","post","res","required","maxLength","type","setValueAs","value","alt","SpinningLogo","src","logo","App","auWindow","setAUWindow","windowHandler","get","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0e74ff0.chunk.js","sourcesContent":["import axios, { AxiosInstance } from \"axios\";\r\n\r\nconst END_POINT: string =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://127.0.0.1:8000/api/\"\r\n    : \"https://django-todos-application.herokuapp.com/api/\";\r\n\r\nexport const Instance: AxiosInstance = axios.create({\r\n  baseURL: END_POINT,\r\n});\r\n","import React, { useState } from 'react';\r\nimport { FaCheck, FaTimes, FaTrash } from 'react-icons/fa';\r\nimport { Instance } from '../../utils/tools';\r\nimport './Bar.scss';\r\n\r\nconst toggle = (status: string): string => {\r\n    status = status === \"hidden\" ? \"show\" : \"hidden\";\r\n    return status;\r\n};\r\n\r\nconst Bar: React.FC<{ data: ToDos, callback: any }> = ({ data, callback }) => {\r\n    const [data_, setData] = useState<ToDos>(Object.assign({}, data));\r\n    const [open, setOpen] = useState<string>('hidden');\r\n\r\n    const Handler = async () => {\r\n        data_.complete = !data_.complete;\r\n        await Instance.put(`${data_.id}/`, data_).then((response) => {\r\n            setData(response.data);\r\n            setStatus(getStatus());\r\n        })\r\n    }\r\n\r\n    const getStatus = (): JSX.Element => {\r\n        return data_.complete ?\r\n            <FaCheck className=\"icon\" color=\"#17d2e8\"\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    Handler();\r\n                }} /> :\r\n            <FaTimes className=\"icon\" color=\"gray\"\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    Handler();\r\n                }} />\r\n    }\r\n\r\n    const [status, setStatus] = useState<JSX.Element>(getStatus());\r\n\r\n    return (\r\n        <div id={`todos-${data_.id}`} className=\"Bar\">\r\n            <div className=\"head\" onClick={() => setOpen(toggle(open))}>\r\n                <div className=\"text\">\r\n                    {data_.title}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    {status}\r\n                    <FaTrash className=\"icon\" color=\"#e81d17\"\r\n                        onClick={async (e) => {\r\n                            e.stopPropagation();\r\n                            Instance.delete(`${data_.id}/`).then(response => {\r\n                                console.log(response);\r\n                                callback(data_.id, 'delete');\r\n                            });\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className={`desc ${open}`}>\r\n                <div className=\"info\">\r\n                    <p className=\"sub-info\">\r\n                        <strong>Description</strong> : {data_.description}\r\n                    </p>\r\n                    <p className=\"sub-info\">\r\n                        <strong>Deadline</strong> : {data_.deadline ?\r\n                            data_.deadline : 'Not Listed'}\r\n                    </p>\r\n                    <p className=\"sub-info\">\r\n                        <strong>Status</strong> : {data_.complete ? 'Finished' :\r\n                            data_.complete === false ? 'Not Finished' : 'Unknown'}\r\n                    </p>\r\n                </div>\r\n                <div className={`update-btn`}>\r\n                    Update Data\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar;","import React, { useCallback } from 'react';\r\nimport './List.scss';\r\nimport Bar from '../Bar/Bar';\r\n\r\nconst List: React.FC<{ data: ToDos[], callback: typeof Callback }> = ({ data, callback }) => {\r\n    const barCalback = useCallback((id: number, action: string) => {\r\n        switch (action) {\r\n            case 'delete':\r\n                const new_data = data.filter((e) => e.id !== id);\r\n                callback('update-data', new_data);\r\n                break;\r\n            default:\r\n                Error('Unknown action');\r\n        }\r\n    }, [data, callback])\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {\r\n                data.map((e) => {\r\n                    return <Bar key={e.id} data={e} callback={barCalback} />;\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(List);","import React from \"react\";\r\nimport './Spinner.scss';\r\n\r\nconst Spinner: React.FC = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"double-bounce1\"></div>\r\n            <div className=\"double-bounce2\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\r\nimport './main.scss'\r\nimport List from \"../../components/List/List\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nconst Main: React.FC<{ data: ToDos[] | null, callback: typeof Callback }> = ({ data, callback }) => {\r\n    const [todos, setTodos] = useState<JSX.Element | null>(null);\r\n    const [loading, setLoading] = useState<string>('loading');\r\n\r\n    useEffect(() => {\r\n        console.log(\"Main.tsx\");\r\n        if (data !== null) {\r\n            setTodos(<List data={data} callback={callback} />);\r\n            setLoading('complete');\r\n        }\r\n    }, [data, callback]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"btn-wrapper\">\r\n                <div className=\"add-btn\" onClick={() => callback('open')}>\r\n                    Add To Do\r\n                </div>\r\n            </div>\r\n            <div className=\"list-wrapper\">\r\n                <div className={loading}>\r\n                    <Spinner />\r\n                </div>\r\n                {todos}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport './AddUpdate.scss'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Instance } from \"../../utils/tools\";\r\n\r\nconst status = \"Create\"\r\n\r\nconst AddUpdate: React.FC<{ data: ToDos[] | null, className: string, callback: (action: string) => void }> =\r\n    ({ data, className, callback }) => {\r\n        const { register, handleSubmit } = useForm();\r\n        const onSubmit = async (data: ToDos) => {\r\n            await Instance.post('.', data).then(res => {\r\n                console.log(res.data);\r\n            })\r\n        };\r\n\r\n        return (\r\n            <div className={`new-update ${className}`}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <label>Title</label>\r\n                    <input {...register(\"title\",\r\n                        { required: true, maxLength: 200 })} />\r\n\r\n                    <label>Description</label>\r\n                    <input {...register(\"description\", { required: true })} />\r\n\r\n                    <label>Status</label>\r\n                    <input type=\"checkbox\" {...register(\"complete\",\r\n                        { setValueAs: value => false })} />\r\n\r\n                    <label>Deadline</label>\r\n                    <input type=\"date\" {...register(\"deadline\",\r\n                        { setValueAs: value => null })} />\r\n\r\n                    <div className=\"btn-wrapper\">\r\n                        <input className=\"btn submit\" type=\"submit\" alt={status} />\r\n                        <div className=\"btn cancel\" onClick={() => {\r\n                            callback('close');\r\n                        }}>\r\n                            Cancel\r\n                        </div>\r\n                        <div className=\"btn\" onClick={() => {\r\n                            console.log(data);\r\n                        }}>\r\n                            Test\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default AddUpdate;","export default __webpack_public_path__ + \"static/media/logo.53c5bd1e.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './SpinningLogo.scss';\r\n\r\nconst SpinningLogo: React.FC = () => {\r\n  return (\r\n    <>\r\n      <img src={logo} className=\"spinning-logo\" alt=\"logo\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpinningLogo;","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.scss\";\nimport Main from \"./views/Main/main\";\nimport AddUpdate from \"./views/AddUpdate/AddUpdate\";\nimport SpinningLogo from \"./components/SpinningLogo/SpinningLogo\";\nimport { Instance } from \"./utils/tools\";\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<ToDos[] | null>(null);\n  const [auWindow, setAUWindow] = useState<string>('close');\n\n  const windowHandler = useCallback((action, new_data = null) => {\n    switch (action) {\n      case 'open':\n        setAUWindow('open');\n        break;\n      case 'close':\n        setAUWindow('close');\n        break;\n      case 'update-data':\n        setData(new_data);\n        break;\n      default:\n        Error('Undefined action!');\n        break;\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log(\"App.tsx\");\n    Instance.get('.').then(response => {\n      setData(response.data);\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SpinningLogo />\n      </header>\n      <main>\n        <div className=\"container\">\n          <div className=\"title\">\n            <h2>React To Do's App</h2>\n          </div>\n          <div className=\"todos\">\n            <Main data={data} callback={windowHandler} />\n            <AddUpdate data={data} className={auWindow} callback={windowHandler} />\n          </div>\n        </div>\n      </main>\n    </div >\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}